//finding prime number using java8
public static boolean isPrime(int number) {
    return IntStream.rangeClosed(2, number/2).noneMatch(i -> number%i == 0).sum();
}

//select nth salary from employee table
SELECT salary FROM Employee ORDER BY salary DESC LIMIT N-1, 1; ---> Nth largest salary
select * from Employee ORDER BY `sal` DESC limit 5,1; ----> 6th largest salary

//simple functional interface creation and method invoke
@FunctionalInterface
interface Demointerface{
	abstract boolean method(Class<?> class1, Class<?> class2, Class<?> class3);
}

class DemoClass {
	DemoInterface demo = (class1, class2, class3) ->{
		Sysout("parameters");
	}
	
	demo.method();
}

//filter even number from list and calculate its sum java8
List<Integer> list = new ArrayList<>();

list.add(1);
list.add(4);
list.add(5),
list.add(7);
list.add(9);

int sum = list.stream().collect(filter(x->(x%2 !=0 ))).sum();

//pseudocode
String s1 = "ABC";
String s2 = new String("ABC");
final String s3 = "DEF";
String s4 = s2;

//factorial Java 8
int number = 5;
IntStream.rangeClosed(2, number).reduce(1, (x, y) -> x * y)

//fibonacii series
int number=10 // series upto 10 number
Stream.iterate(new int[] { 1, 1 }, p -> new int[] { p[1], p[0] + p[1] })
      .limit(number)
      .forEach(p -> System.out.println(p[0]));
      
      
**********************************************************      
Sample input-
2
0 2 10
5 3 5

Sample output-
2 6 14 30 62 126 254 510 1022 2046
8 14 26 50 98

We use a=5,b=3,n=5 and  to produce some series :
s0 = 5+1*3=8
s1 = 5+1*3+2*3=14
s0 = 5+1*3+2*3+4*3=26
s0 = 5+1*3+2*3+4*3+8*3=50
s0 = 5+1*3+2*3+4*3+8*3+16*3=98
We then print each element of our series as a single line of space-separated values.

class Solution{
    public static void main(String []argh){
        Scanner in = new Scanner(System.in);
        int t=in.nextInt();
        
        for(int i=0;i<t;i++){
            int a = in.nextInt();
            int b = in.nextInt();
            int n = in.nextInt();
            for(int j=1;j<=n;j++){
                int sum =0;
               for(int k=0;k<j;k++){
                   sum = sum + (int)Math.pow(2, k)*b;
                }
                sum = a + sum;
                System.out.print(sum+" ");
            }
            System.out.println();
        }
        in.close();
    }
}
